@model BirchmierConstruction.Models.ProjectAndResources
@using BirchmierConstruction.DataModels
@using System.Reflection
@using System.ComponentModel.DataAnnotations

@{
    var pro = Model.Project;
    ViewBag.Title = "Project Details";
    string isChecked = "checked=checked";
    string selected = "selected=selected";
}

@ViewBag.ResultMessage



<div class="col-md-12">
    <div class="row">
        <h1 title="Last Edited: @pro.DateUpdated.ToString("MMMM dd, yyyy HH:mm tt")">@pro.Name</h1>
        <hr />
        <div class="col-md-3 col-md-offset-4">
            <p><strong>Start:</strong> <span style="float: right;">@pro.StartDate.ToString("MM-dd-yyyy")</span></p>
            <p><strong>Finish:</strong> <span style="float: right;">@pro.FinishDate.ToString("MM-dd-yyyy")</span></p>
            <p><strong>Notes:</strong> <span style="float: right;">@pro.Notes</span></p>

            <p style="margin: 1px auto;">
                <input type="checkbox" value="true" name="save" @if (pro.IsBaseLine) { @isChecked   } onchange="saveBaseLine(this, '@pro.ProjectId')" />
                Saved as Baseline &nbsp;&nbsp;
            </p>
            <p style="margin: 1px auto;" id="saveMessage">&nbsp;</p>
            <input type="hidden" name="save" value="false" />
            <br />
            <p>
                <a style="width: 40%;" class="btn btn-info" href="/Home/AddProject/@pro.ProjectId" title="Edit Project"><img class="icon" src="/Resources/pencil.png" title="Edit Project" /> &nbsp; Edit</a>
                &nbsp;&nbsp;
                <a style="width: 40%;" class="btn btn-danger" href="javascript:Delete($('#DeleteProject_@pro.ProjectId')[0], 'Project');" onclick="return confirm('Are you sure you want to delete the project? All tasks in this project will be deleted too.')">
                    <img id="DeleteProject_@pro.ProjectId" class="icon" src="/Resources/Delete.png" title="Delete Project" /> &nbsp; Delete
                </a>
            </p>
        </div>
    </div>

    <hr />
    @if (pro.Tasks.Count() == 0)
    {
        <h3>You have not added Tasks yet!</h3>
    }
    else
    {
        <table class="table table-condensed responsive-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Completion</th>
                    <th>Start</th>
                    <th>Finish</th>
                    <th>Duration Variance</th>
                    <th>Finish Variance</th>
                    <th>Predecessors</th>
                    <th>Resource</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in pro.Tasks.OrderBy(x => x.Order))
                {
                    <tr @if (item.CompletionPercentage == 100) { <text> style="background-color: lightblue;" </text>                               } id="taskRow_@item._TaskId">
                        <td>@item.Order</td>
                        <td id="TaskNameCell_@item._TaskId">
                            <span id="TaskName_@item._TaskId" class="pre_edit">@item.Name</span>
                            <a href="javascript:void(0)"><img id="EditTaskName_@item._TaskId" style="width:14px;height:14px;" src="/Resources/pencil.png" title="Edit" /></a>
                        </td>
                        <td>

                            <select id="taskCompletionList_@item._TaskId" onchange="changeCompletion(this)">
                                @for (int i = 0; i < Model.taskVM.Percentages.Count; i++)
                                {
                                    <option @if (item.CompletionPercentage == Convert.ToInt32(Model.taskVM.Percentages[i].Value)) { @selected   } value="@Model.taskVM.Percentages[i].Value">
                                        @Model.taskVM.Percentages[i].Value %
                                    </option>
                                }
                            </select>

                            <span id="taskCompletion_@item._TaskId">@item.CompletionPercentage %</span>
                        </td>
                        <td>
                            <input type="text" class="datepicker tasks" value='@item.StartDate.ToString("MM/dd/yyyy")' id="TaskStartDate_@item._TaskId" />
                        </td>
                        <td>
                            <input type="text" class="datepicker tasks" value='@item.FinishDate.ToString("MM/dd/yyyy")' id="TaskFinishDate_@item._TaskId" />
                        </td>
                        <td>@item.DurationVariance</td>
                        <td>@item.FinishVariance</td>

                        <td id="TaskPredecessorsCell_@item._TaskId">
                            <span id="TaskPredecessors_@item._TaskId" class="pre_edit">@item.Predecessors</span>
                            <a href="javascript:void(0)"><img id="EditTaskPredecessors_@item._TaskId" style="width:14px;height:14px;" src="/Resources/pencil.png" title="Edit" /></a>
                        </td>

                        <td>
                            <select id="taskResourceList_@item._TaskId" onchange="changeResource(this)">
                                @for (int i = 0; i < Model.taskVM.Resources.Count; i++)
                                {
                                    var current = Model.taskVM.Resources[i];
                                    <option @if (item.ResourceId == Convert.ToInt32(current.Value)) { @selected   } value="@current.Value">
                                        @current.Text
                                    </option>
                                }
                            </select>

                            <span id="taskResource_@item._TaskId">
                                @if (item.ResourceId != null)
                                { <a href="~/Resource/ResourceDetails/@item.ResourceId">@item.Resource.CompanyName</a> }
                                else
                                {<text> No Resource Assigned </text>}
                            </span>
                        </td>
                        <td>
                            <a href="/Home/DeleteTask?id=@item._TaskId" onclick="return confirm('Are you sure you want to delete this task?')">
                                <img id="DeleteProject_@pro.ProjectId" class="icon" src="/Resources/Delete.png" title="Delete Project" />
                            </a>
                        </td>
                    </tr>
                }
            </tbody>

        </table>
    }

    @using (Html.BeginForm("AddTask", "Home", FormMethod.Post))
    {

        @Html.HiddenFor(x => Model.taskVM.Task._TaskId)
        @Html.HiddenFor(x => Model.taskVM.Task.ProjectId)
        @Html.HiddenFor(x => Model.taskVM.Task.Order)
        <table class="table table-condensed">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Start Date</th>
                    <th>Finish Date</th>
                    <th>Completion</th>
                    <th>Predecessors</th>
                    <th>Resource Name</th>
                </tr>
                <tr>
                    <td>@Model.taskVM.Task.Order</td>
                    <td>@Html.TextBoxFor(x => x.taskVM.Task.Name)</td>
                    <td>
                        @Html.TextBoxFor(x => x.taskVM.Task.StartDate, new { @class = "datepicker newTask", Value = Model.taskVM.Task.StartDate.ToString("MM/dd/yyyy") })
                    </td>
                    <td>
                        @Html.TextBoxFor(x => x.taskVM.Task.FinishDate, new { @class = "datepicker newTask", Value = Model.taskVM.Task.StartDate.ToString("MM/dd/yyyy") })
                    </td>
                    <td>
                        @Html.DropDownListFor(x => x.taskVM.Task.CompletionPercentage, Model.taskVM.Percentages, new { id = "percent" })
                    </td>
                    <td>@Html.TextBoxFor(x => x.taskVM.Task.Predecessors)</td>
                    <td>
                        @Html.DropDownListFor(x => x.taskVM.Task.ResourceId, Model.taskVM.Resources, new { id = "resource" })
                    </td>
                </tr>
            </thead>
        </table>
        <input class="btn btn-success" type="submit" value="Submit Task" />
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}